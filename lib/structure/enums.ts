// File: lib/structure/enums.ts

export enum BUTTON_TYPE {
  API_TRANSACTION_ERROR,
  BUY_ERROR_REQUIRED,
  BUY_TOKEN_REQUIRED,
  CONNECT,
  INSUFFICIENT_BALANCE,
  IS_LOADING_PRICE,
  NO_HARDHAT_API,
  SELL_ERROR_REQUIRED,
  SELL_TOKEN_REQUIRED,
  SWAP,
  TOKENS_REQUIRED,
  UNDEFINED,
  ZERO_AMOUNT,
}

export enum EXCHANGE_STATE {
  APPROVE,
  INSUFFICIENT_BALANCE,
  MISSING_SELL_AMOUNT,
  NOT_CONNECTED,
  PENDING,
  SWAP,
}

export enum FEED_TYPE {
  AGENT_ACCOUNTS,
  RECIPIENT_ACCOUNTS,
  TOKEN_LIST,
}

export enum SP_COIN_DISPLAY {
  DISPLAY_OFF,
  DISPLAY_ON,
  SHOW_TRADING_STATION_PANEL,
  SHOW_MANAGE_SPONSORS_BUTTON,
  SHOW_RECIPIENT_SCROLL_PANEL,
  SHOW_TOKEN_SCROLL_PANEL,
  SHOW_ERROR_MESSAGE_PANEL,
  SHOW_SPONSOR_RATE_CONFIG_PANEL,
  SHOW_RECIPIENT_SELECT_PANEL,
  SHOW_AGENT_SELECT_CONTAINER,
  SELL_SELECT_CONTAINER,
  BUY_SELECT_CONTAINER,
  AGENT_SELECT_CONTAINER,
  RECIPIENT_SELECT_CONTAINER
}

// export enum SP_COIN_DISPLAY {
//   SELL_SELECT_CONTAINER = 'SELL_SELECT_CONTAINER',
//   BUY_SELECT_CONTAINER = 'BUY_SELECT_CONTAINER',
//   AGENT_SELECT_CONTAINER = 'RECIPIENT_SELECT_CONTAINER',
//   RECIPIENT_SELECT_CONTAINER = 'RECIPIENT_SELECT_CONTAINER',
// }

export enum STATUS {
  ERROR_API_PRICE,
  FAILED,
  MESSAGE_ERROR,
  SUCCESS,
  WARNING_HARDHAT,
  INFO,
}

export enum TRADE_DIRECTION {
  SELL_EXACT_OUT,
  BUY_EXACT_IN,
}

export enum API_TRADING_PROVIDER {
  API_0X,
  API_1INCH,
}

// File: lib/structure/enums.ts (or equivalent)

export enum InputState {
  // 0️⃣ Blank input
  EMPTY_INPUT,                            // 0

  // 1️⃣ Hex input validation
  INVALID_HEX_INPUT,                      // 1
  VALIDATE_ADDRESS,                       // 2
  INCOMPLETE_ADDRESS,                     // 3
  INVALID_ADDRESS_INPUT,                  // 4

  // 2️⃣ Duplication check
  TEST_DUPLICATE_INPUT,                   // 5
  DUPLICATE_INPUT_ERROR,                  // 6

  // 3️⃣ Blockchain existence check
  VALIDATE_EXISTS_ON_CHAIN,               // 7
  CONTRACT_NOT_FOUND_ON_BLOCKCHAIN,       // 8

  // 4️⃣ Preview check phase
  VALIDATE_PREVIEW,                       // 9
  PREVIEW_ASSET,                          // 10
  PREVIEW_CONTRACT_EXISTS_LOCALLY,        // 11
  PREVIEW_CONTRACT_NOT_FOUND_LOCALLY,     // 12

  // 5️⃣ Balance check
  VALIDATE_BALANCE,                       // 13
  VALIDATE_BALANCE_ERROR,                 // 14

  // 6️⃣ Final close
  CLOSE_SELECT_SCROLL_PANEL,              // 15
}

export const getInputStateString = (state: InputState): string =>
  InputState[state] ?? 'UNKNOWN_INPUT_STATE';
