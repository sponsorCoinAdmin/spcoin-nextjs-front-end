// File: lib/structure/enums.ts
export enum BUTTON_TYPE {
  API_TRANSACTION_ERROR,
  BUY_ERROR_REQUIRED,
  BUY_TOKEN_REQUIRED,
  CONNECT,
  INSUFFICIENT_BALANCE,
  IS_LOADING_PRICE,
  NO_HARDHAT_API,
  SELL_ERROR_REQUIRED,
  SELL_TOKEN_REQUIRED,
  SWAP,
  TOKENS_REQUIRED,
  UNDEFINED,
  ZERO_AMOUNT
}

export enum CONTAINER_TYPE {
  SELL_SELECT_CONTAINER,
  BUY_SELECT_CONTAINER,
}

export enum EXCHANGE_STATE {
  APPROVE,
  INSUFFICIENT_BALANCE,
  MISSING_SELL_AMOUNT,
  NOT_CONNECTED,
  PENDING,
  SWAP
}

export enum FEED_TYPE {
  AGENT_ACCOUNTS,
  RECIPIENT_ACCOUNTS,
  TOKEN_LIST
}

export enum SP_COIN_DISPLAY {
  DISPLAY_OFF,
  EXCHANGE_ROOT,
  SHOW_ACTIVE_RECIPIENT_CONTAINER,
  SHOW_RECIPIENT_SELECT_DIALOG,
  SHOW_SPONSOR_RATE_CONFIG,
  SHOW_MANAGE_SPONSORS_BUTTON,
  SHOW_RECIPIENT_SCROLL_CONTAINER,
  SHOW_TOKEN_SCROLL_CONTAINER,
  SHOW_ERROR_MESSAGE,
}

export enum STATUS {
  ERROR_API_PRICE,
  FAILED,
  MESSAGE_ERROR,
  SUCCESS,
  WARNING_HARDHAT,
  INFO
}

export enum TRADE_DIRECTION {
  SELL_EXACT_OUT,
  BUY_EXACT_IN
}

export enum API_TRADING_PROVIDER {
  API_0X,
  API_1INCH
}

export enum InputState {
  EMPTY_INPUT,
  INVALID_ADDRESS_INPUT,
  DUPLICATE_INPUT,
  IS_LOADING,
  CONTRACT_NOT_FOUND_ON_BLOCKCHAIN,
  CONTRACT_NOT_FOUND_LOCALLY,
  VALID_INPUT_PENDING,
  VALID_INPUT,
  CLOSE_SELECT_INPUT,
}

export const getInputStateString = (state: InputState): string => {
  switch (state) {
    case InputState.EMPTY_INPUT:
      return 'EMPTY_INPUT';
    case InputState.VALID_INPUT:
      return 'VALID_INPUT';
    case InputState.VALID_INPUT_PENDING:
      return 'VALID_INPUT_PENDING';
    case InputState.INVALID_ADDRESS_INPUT:
      return 'INVALID_ADDRESS_INPUT';
    case InputState.CONTRACT_NOT_FOUND_ON_BLOCKCHAIN:
      return 'CONTRACT_NOT_FOUND_ON_BLOCKCHAIN';
    case InputState.CONTRACT_NOT_FOUND_LOCALLY:
      return 'CONTRACT_NOT_FOUND_LOCALLY';
    case InputState.DUPLICATE_INPUT:
      return 'DUPLICATE_INPUT';
    case InputState.IS_LOADING:
      return 'IS_LOADING';
    case InputState.CLOSE_SELECT_INPUT:
      return 'CLOSE_SELECT_INPUT';
    default:
      return 'UNKNOWN_INPUT_STATE';
  }
};
